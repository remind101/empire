#cloud-config

coreos:
  etcd:
    # generate a new token for each unique cluster from https://discovery.etcd.io/new
    # WARNING: replace each time you 'vagrant destroy'
    # discovery: https://discovery.etcd.io/12345693838asdfasfadf13939923
    addr: $public_ipv4:4001
    peer-addr: $public_ipv4:7001
  fleet:
    public-ip: $public_ipv4
    metadata: role=empire_minion
  units:
    - name: etcd.service
      command: start
    - name: fleet.service
      command: start
    - name: docker-tcp.socket
      command: start
      enable: true
      content: |
        [Unit]
        Description=Docker Socket for the API

        [Socket]
        ListenStream=2375
        Service=docker.service
        BindIPv6Only=both

        [Install]
        WantedBy=sockets.target
    - name: discovery.target
      command: start
      enable: true
      content: |
        [Unit]
        Description=Core service discovery services
        Wants=registrator.service
    - name: router.service
      command: start
      enable: true
      content: |
        [Unit]
        Description=Empire routing layer powered by vulcand and registrator.
        After=docker.service etcd.service

        [Service]
        TimeoutStartSec=30m
        KillMode=none
        EnvironmentFile=/etc/environment
        User=core
        Restart=on-failure

        ExecStartPre=-/usr/bin/docker kill empire-router
        ExecStartPre=-/usr/bin/docker rm empire-router

        ExecStart=/usr/bin/docker run --name empire-router -p 8182:8182 -p 80:8181 mailgun/vulcand:v0.8.0-beta.2 /go/bin/vulcand -apiInterface=0.0.0.0 --etcd=http://${COREOS_PRIVATE_IPV4}:4001

        ExecStop=/usr/bin/docker stop empire-router

        [Install]
        WantedBy=multi-user.target
    - name: registrator.service
      command: start
      enable: true
      content: |
        [Unit]
        Description=Registrator
        After=router.service

        [Service]
        TimeoutStartSec=30m
        EnvironmentFile=/etc/environment
        User=core
        Restart=on-failure

        ExecStartPre=-/bin/bash -c "/usr/bin/docker rm registrator &> /dev/null; exit 0"
        ExecStartPre=-/bin/bash -c "cd /home/core/share/router/vulcand && docker load -i registrator_v6.tgz"
        ExecStart=/usr/bin/docker run --name registrator --rm -h %H -v /var/run/docker.sock:/tmp/docker.sock registrator:v6 -ip=${COREOS_PRIVATE_IPV4} -hostname=remind.com vulcand://${COREOS_PRIVATE_IPV4}:4001/vulcand
        ExecStop=/usr/bin/docker stop registrator

        [Install]
        WantedBy=multi-user.target
    - name: postgres.service
      command: start
      enable: true
      content: |
        [Unit]
        Description=Postgres
        After=discovery.service

        [Service]
        TimeoutStartSec=30m
        EnvironmentFile=/etc/environment
        User=core
        Restart=on-failure

        ExecStartPre=-/bin/bash -c "/usr/bin/docker inspect postgres &> /dev/null || /usr/bin/docker pull postgres"
        ExecStartPre=-/bin/bash -c "/usr/bin/docker rm postgres &> /dev/null; exit 0"
        ExecStart=/usr/bin/docker run --name postgres --rm -h %H -p 5432:5432 postgres
        ExecStop=/usr/bin/docker stop postgres

        [Install]
        WantedBy=multi-user.target
    - name: empire.service
      command: start
      enable: true
      content: |
        [Unit]
        Description=Empire
        After=discovery.service postgres.service

        [Service]
        TimeoutStartSec=30m
        EnvironmentFile=/etc/environment
        User=core
        Restart=on-failure

        ExecStartPre=-/bin/bash -c "cd /home/core/share/empire && docker build -t quay.io/remind/empire ."
        ExecStartPre=-/bin/bash -c "/usr/bin/docker rm empire &> /dev/null; exit 0"
        ExecStartPre=/usr/bin/docker run quay.io/remind/empire migrate -db postgres://postgres:postgres@${COREOS_PRIVATE_IPV4}:5432/postgres?sslmode=disable

        ExecStart=/usr/bin/docker run --name empire --rm -h %H -p 8080:8080 -v /var/run/docker.sock:/tmp/docker.sock quay.io/remind/empire server -docker.socket=unix:///tmp/docker.sock -fleet.api=http://${COREOS_PRIVATE_IPV4}:49153 -db postgres://postgres:postgres@${COREOS_PRIVATE_IPV4}:5432/postgres?sslmode=disable

        ExecStop=/usr/bin/docker stop empire

        [Install]
        WantedBy=multi-user.target
write_files:
  - path: /etc/systemd/system/fleet.socket.d/30-ListenStream.conf
    permissions: 0644
    owner: root
    content: |
      [Socket]
      ListenStream=$public_ipv4:49153
